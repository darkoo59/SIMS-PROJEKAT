<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:properties="clr-namespace:Sims_Hospital_Zdravo.Properties"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Grid1 style-->
    <Style TargetType="{x:Type Grid}" x:Key="GridStyle">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                <Setter Property="Background" Value="White"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                <Setter Property="Background" Value="#18223B"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Grid2 style-->
    <Style TargetType="{x:Type Grid}" x:Key="Grid2Style">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                <Setter Property="Background" Value="#1D80CA"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                <Setter Property="Background" Value="#272A42"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- MenuGrid style-->
    <Style TargetType="{x:Type Grid}" x:Key="MenuGrid">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                <Setter Property="Background" Value="#4A90E2"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                <Setter Property="Background" Value="#333333"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--Toggle button style template -->
        <ImageBrush x:Key="TgButton_mouse_over"
                    ImageSource="../../Resources/img/Secretary/ToggleMenu_MouseOver.png"
        />
        <!-- Text font style -->
        <Style x:Key="font_style" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        
        <!--Toggle button style -->

    <Style x:Key="tb_style" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Name="border"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource TgButton_mouse_over}"/>
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource TgButton_mouse_over}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource TgButton_mouse_over}"/>
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource TgButton_mouse_over}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Button style-->

        <Style x:Key="btn_style" TargetType="{x:Type Button}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                <Setter Property="Background" Value="#3175B4" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderBrush="Black"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                <Setter Property="Background" Value="#4A90E2"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderBrush="Black"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background"
                                        Value="#01DDE5"/>
                </Trigger>
        </Style.Triggers>
        </Style>
    
    <!-- ListBox style-->
    <Style TargetType="{x:Type ListBox}" x:Key="listbox_style">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                <Setter Property="Background" Value="#18223B"/>
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                <Setter Property="Background" Value="#FF4A90E2" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Tooltip style-->
    <Style TargetType="{x:Type ToolTip}" x:Key="tt_style">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                <Setter Property="Background" Value="#333333"/>
                <Setter Property="Placement" Value="Right" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Width" Value="125" />
                <Setter Property="Margin" Value="0,0,0,0" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="PlacementRectangle" Value="30,0,0,0" />
                <Setter Property="HorizontalOffset" Value="5" />
                <Setter Property="VerticalOffset" Value="6" />
                <Setter Property="HasDropShadow" Value="True" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                <Setter Property="Placement" Value="Right" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Width" Value="125" />
                <Setter Property="Margin" Value="0,0,0,0" />
                <Setter Property="Background" Value="#01DDE5" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="PlacementRectangle" Value="30,0,0,0" />
                <Setter Property="HorizontalOffset" Value="5" />
                <Setter Property="VerticalOffset" Value="6" />
                <Setter Property="HasDropShadow" Value="True" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="tt_medicalRecord_style" TargetType="ToolTip">
        <Setter Property="Placement" Value="Center" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="60" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Background" Value="#01DDE5" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="PlacementRectangle" Value="18,0,0,0" />
        <Setter Property="HorizontalOffset" Value="5" />
        <Setter Property="VerticalOffset" Value="6" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>
    
    <!-- DataGrid style
    <Style x:Key="dataGrid_style" TargetType="{x:Type DataGridRow"}">
        <Style.Triggers>
            <Trigger Property="dg:DataGridRow.IsSelected" Value="True">
                <Setter Property="Background" Value="#4A90E2" />
                <Setter Property="BorderBrush" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style> -->

    <Style TargetType="{x:Type DataGridRow}" x:Key="dataGridRow_style">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="#4A90E2" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Selected item in listbox-->
            <Style x:Key="myLBStyle" TargetType="{x:Type ListBoxItem}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                             Color="White"/>
            </Style.Resources>
        </Style>

    <!-- Combobox style-->
    <Style x:Key="combo_style" TargetType="ComboBox">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                <Setter Property="Background" Value="#FF0067AE"/>
                <Setter Property="Foreground" Value="#FF0067AE"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                <Setter Property="Background" Value="#3175B4" />
                <Setter Property="Foreground" Value="#3175B4" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Label style-->
    <Style x:Key="label_style" TargetType="Label">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                <Setter Property="Foreground" Value="#FF0067AE"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                <Setter Property="Foreground" Value="#3175B4" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- TextBlock style-->
    <Style x:Key="textblock_style" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                <Setter Property="Foreground" Value="#FF0067AE"/>
                <Setter Property="FontSize" Value="14" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                <Setter Property="Foreground" Value="#3175B4" />
                <Setter Property="FontSize" Value="14" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Textbox style-->
    <Style x:Key="textBox_style" TargetType="TextBox">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="#FF4A90E2" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                <Setter Property="Background" Value="#3175B4" />
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- PasswordBox style-->
    <Style x:Key="paswordBox_style" TargetType="PasswordBox">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="#FF4A90E2" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                <Setter Property="Background" Value="#3175B4" />
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>