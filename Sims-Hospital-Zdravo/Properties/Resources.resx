<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BtnSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="HospitalName" xml:space="preserve">
    <value>Hospital Zdravo</value>
  </data>
  <data name="LanguageText" xml:space="preserve">
    <value>Language :</value>
  </data>
  <data name="LblAbout" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="LblAppointments" xml:space="preserve">
    <value>Appointments</value>
  </data>
  <data name="LblContact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="LblEquipment" xml:space="preserve">
    <value>Equipment</value>
  </data>
  <data name="LblFreeDays" xml:space="preserve">
    <value>Free days requests</value>
  </data>
  <data name="LblHome" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="LblMedicalRecords" xml:space="preserve">
    <value>Medical records</value>
  </data>
  <data name="LblMeetings" xml:space="preserve">
    <value>Meetings</value>
  </data>
  <data name="LblProfile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="LblSettings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="LblSignOut" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="ThemeText" xml:space="preserve">
    <value>Theme :</value>
  </data>
  <data name="ttAppointments" xml:space="preserve">
    <value>Managing appointments</value>
  </data>
  <data name="ttEquipment" xml:space="preserve">
    <value>Equipment acquisition</value>
  </data>
  <data name="ttFreeDays" xml:space="preserve">
    <value>Managing free days</value>
  </data>
  <data name="About1" xml:space="preserve">
    <value>High Quality Treatments</value>
  </data>
  <data name="About2" xml:space="preserve">
    <value>Experienced Doctors</value>
  </data>
  <data name="About3" xml:space="preserve">
    <value>Newest Technologies</value>
  </data>
  <data name="About4" xml:space="preserve">
    <value>High Customer Satisfaction</value>
  </data>
  <data name="About5" xml:space="preserve">
    <value>Emergency help</value>
  </data>
  <data name="About6" xml:space="preserve">
    <value>International</value>
  </data>
  <data name="About7" xml:space="preserve">
    <value>Open hours : 00:00-24:00</value>
  </data>
  <data name="ChooseDoctor" xml:space="preserve">
    <value>Choose doctor speciality :</value>
  </data>
  <data name="NonRegistered" xml:space="preserve">
    <value>For non registerd patients:</value>
  </data>
  <data name="SelectPatient" xml:space="preserve">
    <value>Select patient:</value>
  </data>
  <data name="Guest" xml:space="preserve">
    <value>Guest</value>
  </data>
  <data name="ttNext" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="DoesPatientExist" xml:space="preserve">
    <value>If patient doesn't exist,&amp;#xD;&amp;#xA;please create medical  record first!</value>
  </data>
  <data name="ttCreate" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="StartAt" xml:space="preserve">
    <value>Start at:</value>
  </data>
  <data name="EndAt" xml:space="preserve">
    <value>End at :</value>
  </data>
  <data name="AppStartAt" xml:space="preserve">
    <value>Appointment start at :</value>
  </data>
  <data name="AppEndAt" xml:space="preserve">
    <value>Appointment end at :</value>
  </data>
  <data name="SelectAppType" xml:space="preserve">
    <value>Select appointment type :</value>
  </data>
  <data name="SelectRoom" xml:space="preserve">
    <value>Select room :</value>
  </data>
  <data name="RequestStatus" xml:space="preserve">
    <value>Request status :</value>
  </data>
  <data name="Reason" xml:space="preserve">
    <value>Reason :</value>
  </data>
  <data name="Explanation" xml:space="preserve">
    <value>Explanation :</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Birth date</value>
  </data>
  <data name="PhoneNum" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="BloodType" xml:space="preserve">
    <value>Blood type</value>
  </data>
  <data name="Marital status" xml:space="preserve">
    <value>Marital status</value>
  </data>
  <data name="Allergens" xml:space="preserve">
    <value>Allergens</value>
  </data>
  <data name="MedicalAllergens" xml:space="preserve">
    <value>MedicalAllergens</value>
  </data>
  <data name="Insert" xml:space="preserve">
    <value>Insert</value>
  </data>
  <data name="DateFormat" xml:space="preserve">
    <value>yyyy-mm-dd</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="PatientAllergicTo" xml:space="preserve">
    <value>Patient allergic to:</value>
  </data>
  <data name="OtherAllergens" xml:space="preserve">
    <value>Other allergens:</value>
  </data>
  <data name="PatientMedicalAllergens" xml:space="preserve">
    <value>Patient medical&amp;#xD;&amp;#xA;allergens:</value>
  </data>
  <data name="MeetingAt" xml:space="preserve">
    <value>Meeting start at :</value>
  </data>
  <data name="ChooseRoom" xml:space="preserve">
    <value>Choose room :</value>
  </data>
  <data name="OptionalAttendees" xml:space="preserve">
    <value>Optional attendees :</value>
  </data>
  <data name="Others" xml:space="preserve">
    <value>Others :</value>
  </data>
  <data name="RequiredAttendees" xml:space="preserve">
    <value>Required attendees :</value>
  </data>
  <data name="ScheduleMeeting" xml:space="preserve">
    <value>Schedule meeting</value>
  </data>
  <data name="Secretary" xml:space="preserve">
    <value>Secretary</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="AvailableSupplies" xml:space="preserve">
    <value>Already available&amp;#xD;&amp;#xA;supplies :</value>
  </data>
  <data name="EquipmentName" xml:space="preserve">
    <value>Equipment name :</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity :</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="SendRequest" xml:space="preserve">
    <value>Send request</value>
  </data>
  <data name="AboutSecretary" xml:space="preserve">
    <value>About Secretary</value>
  </data>
  <data name="SecretaryInfo" xml:space="preserve">
    <value>Secretary Ana Jovanovic is an experienced&amp;#xD;&amp;#xA;secretary who is constantly working on&amp;#xD;&amp;#xA;improving her skills.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="EmergencyExamination" xml:space="preserve">
    <value>Emergency examination</value>
  </data>
  <data name="Reschedule" xml:space="preserve">
    <value>Reschedule</value>
  </data>
  <data name="Schedule" xml:space="preserve">
    <value>Schedule</value>
  </data>
</root>